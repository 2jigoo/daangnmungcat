SELECT ID, MEM_ID, DOG_CATE, CAT_CATE, TITLE, CONTENT, PRICE, DONGNE1_ID, DONGNE2_ID, BUY_MEM_ID, SALE_STATE, REGDATE, REDATE, HITS, CHAT_COUNT, HEART_COUNT FROM JOONGO_SALE;

SELECT js.ID, MEM_ID, DOG_CATE, CAT_CATE, TITLE, CONTENT, PRICE, d1.ID AS DONGNE1ID, d1.NAME AS DONGNE1NAME, d2.ID AS DONGNE2ID, d2.NAME AS DONGNE2NAME, BUY_MEM_ID, SALE_STATE, REGDATE, REDATE, HITS, CHAT_COUNT, HEART_COUNT 
 FROM JOONGO_SALE js LEFT JOIN DONGNE1 d1 ON js.DONGNE1_ID = d1.ID LEFT JOIN DONGNE2 d2 ON js.DONGNE2_ID = d2.ID;

SELECT js.ID, MEM_ID, DOG_CATE, CAT_CATE, TITLE, CONTENT, PRICE, d1.ID AS DONGNE1ID, d1.NAME AS DONGNE1NAME, d2.ID AS DONGNE2ID, d2.NAME AS DONGNE2NAME, BUY_MEM_ID, SALE_STATE, REGDATE, REDATE, HITS, CHAT_COUNT, HEART_COUNT 
 FROM JOONGO_SALE js LEFT JOIN DONGNE1 d1 ON js.DONGNE1_ID = d1.ID LEFT JOIN DONGNE2 d2 ON js.DONGNE2_ID = d2.ID WHERE d1.NAME = '부산광역시' AND d2.NAME = '동구';

SELECT ID FROM DONGNE1 WHERE NAME = '부산광역시';

SELECT rownum, js.*
  FROM JOONGO_SALE js 
 WHERE rownum BETWEEN 1 AND 5
 ORDER BY rownum desc;
 
SELECT rownum, js.ID, MEM_ID, DOG_CATE, CAT_CATE, TITLE, CONTENT, PRICE, d1.ID AS DONGNE1ID, d1.NAME AS DONGNE1NAME, d2.ID AS DONGNE2ID, d2.NAME AS DONGNE2NAME, BUY_MEM_ID, SALE_STATE, REGDATE, REDATE, HITS, CHAT_COUNT, HEART_COUNT 
  FROM JOONGO_SALE js LEFT JOIN DONGNE1 d1 ON js.DONGNE1_ID = d1.ID LEFT JOIN DONGNE2 d2 ON js.DONGNE2_ID = d2.ID
  --WHERE rownum BETWEEN 1 AND 5
  ORDER BY js.ID;
 
SELECT a.*
  FROM (SELECT rownum AS rnum, b.*
  		FROM (SELECT js.ID, MEM_ID, DOG_CATE, CAT_CATE, TITLE, CONTENT, PRICE, d1.ID AS DONGNE1ID, d1.NAME AS DONGNE1NAME, d2.ID AS DONGNE2ID, d2.NAME AS DONGNE2NAME, BUY_MEM_ID, SALE_STATE, REGDATE, REDATE, HITS, CHAT_COUNT, HEART_COUNT 
  FROM JOONGO_SALE js LEFT JOIN DONGNE1 d1 ON js.DONGNE1_ID = d1.ID LEFT JOIN DONGNE2 d2 ON js.DONGNE2_ID = d2.ID WHERE d1.name = '서울특별시' AND d2.NAME = '종로구' ORDER BY js.id desc) b) a
 WHERE a.rnum BETWEEN 1 AND 10
ORDER BY a.rnum;
  
SELECT count(a.id)
  FROM (SELECT rownum AS rnum, b.*
  		FROM (SELECT js.ID, MEM_ID, DOG_CATE, CAT_CATE, TITLE, CONTENT, PRICE, d1.ID AS DONGNE1ID, d1.NAME AS DONGNE1NAME, d2.ID AS DONGNE2ID, d2.NAME AS DONGNE2NAME, BUY_MEM_ID, SALE_STATE, REGDATE, REDATE, HITS, CHAT_COUNT, HEART_COUNT 
  FROM JOONGO_SALE js LEFT JOIN DONGNE1 d1 ON js.DONGNE1_ID = d1.ID LEFT JOIN DONGNE2 d2 ON js.DONGNE2_ID = d2.ID ORDER BY js.id desc) b) a;
 
SELECT * FROM JOONGO_SALE;

SELECT joongo_comment_seq.nextval FROM DUAL;
SELECT * FROM JOONGO_COMMENT jc LEFT OUTER JOIN MEMBER m ON jc.MEM_ID = m.ID ORDER BY jc.ID ;
INSERT INTO JOONGO_COMMENT(ID, SALE_ID, MEM_ID, CONTENT) values(joongo_comment_seq.nextval, 2, 'chattest1', '댓글 테스트입니다.');
INSERT INTO JOONGO_COMMENT(ID, SALE_ID, MEM_ID, ORIGIN_ID, TAG_MEM_ID, CONTENT) VALUES(joongo_comment_seq.nextval, 1, 'chattest2', 23, 'chattest1', '계층형 댓글 테스트입니다.4');
INSERT INTO JOONGO_COMMENT(ID, SALE_ID, MEM_ID, CONTENT) values(joongo_comment_seq.nextval, 10, 'chattest1', '테스트');

SELECT a.*
  FROM (SELECT rownum AS rnum, b.*
    FROM (SELECT jc.id, MEM_ID, m.PROFILE_PIC, m.GRADE, SALE_ID, ORIGIN_ID, TAG_MEM_ID, CONTENT, jc.REGDATE 
  FROM JOONGO_COMMENT jc LEFT OUTER JOIN MEMBER m ON jc.MEM_ID = m.ID
 WHERE SALE_ID = 1
 START WITH origin_id IS NULL
 CONNECT BY PRIOR jc.id = ORIGIN_ID
 ORDER SIBLINGS BY ID) b) a
 WHERE a.rnum BETWEEN 1 AND 10
ORDER BY a.rnum;

-- delete
DELETE FROM JOONGO_COMMENT WHERE ID = 23 OR ORIGIN_ID = 23;

-- update
UPDATE JOONGO_COMMENT SET CONTENT = '글을 수정해봅니다.' WHERE ID = 36;

SELECT count(id) FROM JOONGO_COMMENT WHERE SALE_ID = 2;

SELECT * FROM JOONGO_COMMENT jc CONNECT BY ID = ORIGIN_ID ORDER SIBLINGS BY SALE_ID ;

SELECT id, MEM_ID, SALE_ID, ORIGIN_ID, TAG_MEM_ID, CONTENT, REGDATE 
  FROM JOONGO_COMMENT jc 
 START WITH origin_id IS NULL
 CONNECT BY PRIOR id = ORIGIN_ID
 ORDER SIBLINGS BY ID;
 


SELECT * FROM MEMBER;
UPDATE MEMBER SET DONGNE1 = 1, DONGNE2 = 1 WHERE ID = 'chattest1';
UPDATE MEMBER SET DONGNE1 = 3, DONGNE2 = 44 WHERE ID = 'chattest1';

SELECT * FROM MALL_DOG_CATE;
SELECT * FROM MALL_PDT;

INSERT INTO MALL_PDT VALUES(mall_pdt_seq.nextval, 1, NULL, '네츄럴코어', 13000, '네츄럴코어 사료입니다.', 'y', 100, NULL, NULL, NULL, '조건부 무료배송', 50000, 3000, sysdate);